Day 22 â€“ Web Application Security Basics
ðŸ”¹ 1. What is Web Application Security?

Web Application Security = Protecting web apps from attacks that target their code, logic, or data.

Purpose:

Prevent unauthorized access

Protect sensitive data (users, credentials, payment info)

Maintain availability and integrity of web apps

ðŸ”¹ 2. OWASP Top 10 (Most Critical Web Risks)
#	Vulnerability	Description
1	Injection	SQL, Command, LDAP injection attacks
2	Broken Authentication	Weak login, session handling issues
3	Sensitive Data Exposure	Data not encrypted or poorly protected
4	XML External Entities (XXE)	Vulnerability in XML parsers
5	Broken Access Control	Unauthorized actions allowed
6	Security Misconfiguration	Default configs, open ports
7	Cross-Site Scripting (XSS)	Injecting scripts into usersâ€™ browsers
8	Insecure Deserialization	Code execution via unsafe object deserialization
9	Using Components with Known Vulnerabilities	Vulnerable libraries or frameworks
10	Insufficient Logging & Monitoring	SOC canâ€™t detect breaches
ðŸ”¹ 3. Key Web Security Tools
Tool	Purpose
Burp Suite	Web app proxy for intercepting and testing requests
OWASP ZAP	Open-source alternative for web app testing
DVWA	Damn Vulnerable Web App â€“ training platform
Nikto	Web server vulnerability scanner
SQLMap	Automated SQL injection testing
ðŸ”¹ 4. Practical Tasks
Task A: Setup DVWA (Kali Linux)
sudo apt update
sudo apt install dvwa -y
sudo service apache2 start
sudo service mysql start


Access http://localhost/DVWA in browser
ðŸ“¸ Screenshot â†’ Day22_WebSec/dvwa_setup.png

Task B: SQL Injection Test

Login to DVWA â†’ set Security = Low

Go to SQL Injection page

Input: ' OR '1'='1 â†’ see data bypass login

Task C: Cross-Site Scripting (XSS) Test

Go to XSS (Stored) page

Input: <script>alert("XSS")</script>

Submit â†’ pop-up alert confirms vulnerability

Task D: Burp Suite Interception

Open Burp Suite â†’ Proxy â†’ Intercept ON

Configure browser to use 127.0.0.1:8080

Capture login or form request

Modify parameters â†’ Forward â†’ Observe response

Task E: Web Vulnerability Scan with Nikto
nikto -h http://localhost/DVWA


Detect misconfigurations, known vulnerabilities

ðŸ”¹ 5. Key Takeaways

Learned OWASP Top 10 web vulnerabilities âœ…

Practiced SQL Injection & XSS on DVWA âœ…

Learned intercepting & modifying requests using Burp Suite âœ…

Performed web server vulnerability scan with Nikto âœ…

Web app security knowledge is critical for SOC & network defense âœ…
